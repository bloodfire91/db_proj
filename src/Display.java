/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Robin
 */
import java.awt.CardLayout;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import java.util.List;
import java.util.Calendar;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.ArrayList;
import java.util.Random;
import java.util.Set;

import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

public class Display extends javax.swing.JFrame {
    private Controller controller;
    
    /**
     * Creates new form Display
     */
    public Display() {
        initComponents();
    }
    
    public Display(Controller controller) {
        initComponents();
        this.controller = controller;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tripType = new javax.swing.ButtonGroup();
        jButton5 = new javax.swing.JButton();
        loginPanel = new javax.swing.JPanel();
        OldUserSignIn = new javax.swing.JPanel();
        oldUserUsernameField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        oldUserSignIn = new javax.swing.JButton();
        oldUserPasswordField = new javax.swing.JPasswordField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        newUserUsernameField = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        createAccountButton = new javax.swing.JButton();
        newUserPasswordField = new javax.swing.JPasswordField();
        adminPanel = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        adminDeleteTripButton = new javax.swing.JButton();
        adminEditAssignmentButton = new javax.swing.JButton();
        adminViewTripButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        adminTripsTable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        adminLegsTable = new javax.swing.JTable();
        adminLogoutButton = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        adminLoggedInAsLabel = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        userPanel = new javax.swing.JPanel();
        userSearchFlightButton = new javax.swing.JButton();
        userViewFlightHistoryButton = new javax.swing.JButton();
        userFlightHistoryScroll = new javax.swing.JScrollPane();
        userFlightHistoryTable = new javax.swing.JTable();
        userLogoutButton = new javax.swing.JButton();
        jLabel24 = new javax.swing.JLabel();
        userLoggedInAsLabel = new javax.swing.JLabel();
        flightSearchPanel = new javax.swing.JPanel();
        searchResultsPanel = new javax.swing.JPanel();
        selectTripButton = new javax.swing.JButton();
        searchResultsScroll = new javax.swing.JScrollPane();
        returnSearchResultsTable = new javax.swing.JTable();
        searchResultsScroll1 = new javax.swing.JScrollPane();
        departSearchResultsTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        basicSearchPanel = new javax.swing.JPanel();
        basicSearchButton = new javax.swing.JButton();
        leavingComboBox = new javax.swing.JComboBox();
        goingComboBox = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        oneWayRadio = new javax.swing.JRadioButton();
        roundTripRadio = new javax.swing.JRadioButton();
        plusMinusLeavingCombo = new javax.swing.JComboBox();
        plusMinusGoingCombo = new javax.swing.JComboBox();
        leavingDatePicker = new org.jdesktop.swingx.JXDatePicker();
        goingDatePicker = new org.jdesktop.swingx.JXDatePicker();
        basicSearchLogoutButton = new javax.swing.JButton();
        basicSearchBackButton = new javax.swing.JButton();
        paymentPanel = new javax.swing.JPanel();
        paymentSubmitPanel = new javax.swing.JPanel();
        paymentEmailField = new javax.swing.JTextField();
        paymentStreetField = new javax.swing.JTextField();
        paymentAccountNumField = new javax.swing.JTextField();
        paymentAccountNameField = new javax.swing.JTextField();
        paymentPhoneField = new javax.swing.JTextField();
        paymentStateField = new javax.swing.JTextField();
        paymentZipField = new javax.swing.JTextField();
        paymentSubmitButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        totalPaymentDueField = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        paymenLogoutButton = new javax.swing.JButton();
        paymentBackButton = new javax.swing.JButton();

        jButton5.setText("jButton5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jLabel9.setText("Username");

        jLabel18.setText("Password");

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setText("Sign In");

        oldUserSignIn.setText("Sign In");
        oldUserSignIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldUserSignInActionPerformed(evt);
            }
        });

        oldUserPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oldUserPasswordFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OldUserSignInLayout = new javax.swing.GroupLayout(OldUserSignIn);
        OldUserSignIn.setLayout(OldUserSignInLayout);
        OldUserSignInLayout.setHorizontalGroup(
            OldUserSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OldUserSignInLayout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addGroup(OldUserSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22)
                    .addComponent(jLabel18)
                    .addComponent(jLabel9)
                    .addComponent(oldUserUsernameField)
                    .addComponent(oldUserSignIn, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(oldUserPasswordField))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        OldUserSignInLayout.setVerticalGroup(
            OldUserSignInLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OldUserSignInLayout.createSequentialGroup()
                .addContainerGap(55, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oldUserUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(oldUserPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(oldUserSignIn)
                .addGap(17, 17, 17))
        );

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setText("New User");

        jLabel20.setText("Password");

        newUserUsernameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserUsernameFieldActionPerformed(evt);
            }
        });

        jLabel21.setText("Username");

        createAccountButton.setText("Create Account");
        createAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAccountButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OldUserSignIn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator1))
                .addContainerGap())
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(246, 246, 246)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21)
                    .addComponent(newUserUsernameField)
                    .addComponent(jLabel19)
                    .addComponent(createAccountButton, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(newUserPasswordField))
                .addContainerGap(375, Short.MAX_VALUE))
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(OldUserSignIn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newUserUsernameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel20)
                .addGap(8, 8, 8)
                .addComponent(newUserPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(createAccountButton)
                .addContainerGap(192, Short.MAX_VALUE))
        );

        getContentPane().add(loginPanel, "loginCard");

        jLabel25.setText("Trips:");

        adminDeleteTripButton.setText("Delete");
        adminDeleteTripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminDeleteTripButtonActionPerformed(evt);
            }
        });

        adminEditAssignmentButton.setText("Edit Assignment");
        adminEditAssignmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminEditAssignmentButtonActionPerformed(evt);
            }
        });

        adminViewTripButton.setText("View");
        adminViewTripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminViewTripButtonActionPerformed(evt);
            }
        });

        adminTripsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trip Number", "Airline", "Price", "Departure", "Destination", "Number of Legs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(adminTripsTable);

        adminLegsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trip Number", "Leg Number", "Seats Available", "Date", "Assignment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(adminLegsTable);

        adminLogoutButton.setText("Logout");
        adminLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminLogoutButtonActionPerformed(evt);
            }
        });

        jLabel26.setText("Logged in as : ");

        jLabel23.setText("Legs:");

        javax.swing.GroupLayout adminPanelLayout = new javax.swing.GroupLayout(adminPanel);
        adminPanel.setLayout(adminPanelLayout);
        adminPanelLayout.setHorizontalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addComponent(adminLoggedInAsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 515, Short.MAX_VALUE)
                        .addComponent(adminLogoutButton))
                    .addGroup(adminPanelLayout.createSequentialGroup()
                        .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 514, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(adminPanelLayout.createSequentialGroup()
                                .addGap(397, 397, 397)
                                .addComponent(adminEditAssignmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, adminPanelLayout.createSequentialGroup()
                                .addComponent(adminViewTripButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(adminDeleteTripButton)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        adminPanelLayout.setVerticalGroup(
            adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(adminPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminLogoutButton)
                    .addComponent(jLabel26)
                    .addComponent(adminLoggedInAsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminDeleteTripButton)
                    .addComponent(adminViewTripButton))
                .addGap(11, 11, 11)
                .addGroup(adminPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(adminEditAssignmentButton)
                .addContainerGap(135, Short.MAX_VALUE))
        );

        getContentPane().add(adminPanel, "adminCard");

        userSearchFlightButton.setText("Search Flights");
        userSearchFlightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userSearchFlightButtonActionPerformed(evt);
            }
        });

        userViewFlightHistoryButton.setText("View Flight History");
        userViewFlightHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userViewFlightHistoryButtonActionPerformed(evt);
            }
        });

        userFlightHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trip Number", "Airline", "Price", "Departure", "Destination", "Number of Legs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userFlightHistoryScroll.setViewportView(userFlightHistoryTable);

        userLogoutButton.setText("Logout");
        userLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userLogoutButtonActionPerformed(evt);
            }
        });

        jLabel24.setText("Logged in as: ");

        javax.swing.GroupLayout userPanelLayout = new javax.swing.GroupLayout(userPanel);
        userPanel.setLayout(userPanelLayout);
        userPanelLayout.setHorizontalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userPanelLayout.createSequentialGroup()
                        .addComponent(userFlightHistoryScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 185, Short.MAX_VALUE))
                    .addGroup(userPanelLayout.createSequentialGroup()
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(userSearchFlightButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(userViewFlightHistoryButton, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE))
                            .addGroup(userPanelLayout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addGap(18, 18, 18)
                                .addComponent(userLoggedInAsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 361, Short.MAX_VALUE)
                        .addComponent(userLogoutButton)))
                .addContainerGap())
        );
        userPanelLayout.setVerticalGroup(
            userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userPanelLayout.createSequentialGroup()
                .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(userPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(userLogoutButton))
                    .addGroup(userPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(userPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userLoggedInAsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))))
                .addGap(12, 12, 12)
                .addComponent(userSearchFlightButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(userViewFlightHistoryButton)
                .addGap(18, 18, 18)
                .addComponent(userFlightHistoryScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        getContentPane().add(userPanel, "userCard");

        searchResultsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Results", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        selectTripButton.setText("Select");
        selectTripButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectTripButtonActionPerformed(evt);
            }
        });

        returnSearchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trip Number", "Airline", "Price", "Departure", "Destination", "Number of Legs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchResultsScroll.setViewportView(returnSearchResultsTable);

        departSearchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Trip Number", "Airline", "Price", "Departure", "Destination", "Number of Legs"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        searchResultsScroll1.setViewportView(departSearchResultsTable);

        jLabel14.setText("Departing Flights");

        jLabel17.setText("Returning Flights");

        javax.swing.GroupLayout searchResultsPanelLayout = new javax.swing.GroupLayout(searchResultsPanel);
        searchResultsPanel.setLayout(searchResultsPanelLayout);
        searchResultsPanelLayout.setHorizontalGroup(
            searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(searchResultsScroll1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 691, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchResultsPanelLayout.createSequentialGroup()
                .addComponent(jLabel14)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(searchResultsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, searchResultsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addContainerGap())
                    .addGroup(searchResultsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(selectTripButton, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addComponent(searchResultsScroll)
        );
        searchResultsPanelLayout.setVerticalGroup(
            searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchResultsPanelLayout.createSequentialGroup()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchResultsScroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchResultsScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selectTripButton)
                .addContainerGap())
        );

        basicSearchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        basicSearchButton.setText("Search");
        basicSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basicSearchButtonActionPerformed(evt);
            }
        });

        leavingComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        goingComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel10.setText("Leaving From:");

        jLabel11.setText("Going To:");

        jLabel12.setText("Date");

        jLabel13.setText("+/- days");

        jLabel15.setText("Date");

        jLabel16.setText("+/- days");

        tripType.add(oneWayRadio);
        oneWayRadio.setText("One way");
        oneWayRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneWayRadioActionPerformed(evt);
            }
        });

        tripType.add(roundTripRadio);
        roundTripRadio.setText("Round Trip");
        roundTripRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                roundTripRadioActionPerformed(evt);
            }
        });

        plusMinusLeavingCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        plusMinusGoingCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout basicSearchPanelLayout = new javax.swing.GroupLayout(basicSearchPanel);
        basicSearchPanel.setLayout(basicSearchPanelLayout);
        basicSearchPanelLayout.setHorizontalGroup(
            basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(basicSearchPanelLayout.createSequentialGroup()
                        .addComponent(oneWayRadio)
                        .addGap(18, 18, 18)
                        .addComponent(roundTripRadio)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicSearchPanelLayout.createSequentialGroup()
                        .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(goingComboBox, 0, 261, Short.MAX_VALUE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10)
                            .addComponent(leavingComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicSearchPanelLayout.createSequentialGroup()
                                .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12)
                                    .addComponent(jLabel15))
                                .addGap(87, 87, 87)
                                .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel16))
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicSearchPanelLayout.createSequentialGroup()
                                .addComponent(leavingDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(47, 47, 47)
                                .addComponent(plusMinusLeavingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(basicSearchPanelLayout.createSequentialGroup()
                                .addComponent(goingDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(plusMinusGoingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, basicSearchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(basicSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        basicSearchPanelLayout.setVerticalGroup(
            basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(basicSearchPanelLayout.createSequentialGroup()
                .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(oneWayRadio)
                    .addComponent(roundTripRadio))
                .addGap(18, 18, 18)
                .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(basicSearchPanelLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(leavingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(goingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(basicSearchPanelLayout.createSequentialGroup()
                        .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(leavingDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plusMinusLeavingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(basicSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(goingDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(plusMinusGoingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(basicSearchButton))
        );

        basicSearchLogoutButton.setText("Logout");
        basicSearchLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basicSearchLogoutButtonActionPerformed(evt);
            }
        });

        basicSearchBackButton.setText("Back");
        basicSearchBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                basicSearchBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout flightSearchPanelLayout = new javax.swing.GroupLayout(flightSearchPanel);
        flightSearchPanel.setLayout(flightSearchPanelLayout);
        flightSearchPanelLayout.setHorizontalGroup(
            flightSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(flightSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(flightSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(flightSearchPanelLayout.createSequentialGroup()
                        .addComponent(basicSearchBackButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(basicSearchLogoutButton))
                    .addComponent(basicSearchPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(searchResultsPanel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        flightSearchPanelLayout.setVerticalGroup(
            flightSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, flightSearchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(flightSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(basicSearchLogoutButton)
                    .addComponent(basicSearchBackButton))
                .addGap(1, 1, 1)
                .addComponent(basicSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchResultsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(flightSearchPanel, "flightSearchCard");

        paymentSubmitPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Payment", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14))); // NOI18N

        paymentEmailField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentEmailFieldActionPerformed(evt);
            }
        });

        paymentPhoneField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentPhoneFieldActionPerformed(evt);
            }
        });

        paymentSubmitButton.setText("Submit Payment");
        paymentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentSubmitButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Email");

        jLabel3.setText("Phone");

        jLabel4.setText("Street");

        jLabel5.setText("State");

        jLabel6.setText("Zip");

        jLabel7.setText("Account #");

        jLabel8.setText("Name on Account");

        totalPaymentDueField.setEditable(false);
        totalPaymentDueField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPaymentDueFieldActionPerformed(evt);
            }
        });

        jLabel27.setText("Total Due");

        javax.swing.GroupLayout paymentSubmitPanelLayout = new javax.swing.GroupLayout(paymentSubmitPanel);
        paymentSubmitPanel.setLayout(paymentSubmitPanelLayout);
        paymentSubmitPanelLayout.setHorizontalGroup(
            paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentSubmitPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(paymentAccountNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(paymentStreetField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(paymentAccountNumField, javax.swing.GroupLayout.Alignment.LEADING)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(paymentEmailField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(paymentStateField))
                .addGap(18, 18, 18)
                .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(paymentPhoneField)
                    .addComponent(paymentZipField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(paymentSubmitButton, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                        .addComponent(totalPaymentDueField))
                    .addComponent(jLabel27))
                .addGap(52, 52, 52))
        );
        paymentSubmitPanelLayout.setVerticalGroup(
            paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentSubmitPanelLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentSubmitPanelLayout.createSequentialGroup()
                        .addComponent(paymentSubmitButton)
                        .addContainerGap())
                    .addGroup(paymentSubmitPanelLayout.createSequentialGroup()
                        .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(paymentSubmitPanelLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paymentEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(paymentStateField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paymentSubmitPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(paymentPhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel27))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(paymentSubmitPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(paymentZipField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(totalPaymentDueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(113, 113, 113))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentSubmitPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(5, 5, 5)
                        .addComponent(paymentAccountNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(paymentStreetField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(paymentAccountNumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))))
        );

        paymenLogoutButton.setText("Logout");
        paymenLogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymenLogoutButtonActionPerformed(evt);
            }
        });

        paymentBackButton.setText("Back");
        paymentBackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paymentBackButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paymentPanelLayout = new javax.swing.GroupLayout(paymentPanel);
        paymentPanel.setLayout(paymentPanelLayout);
        paymentPanelLayout.setHorizontalGroup(
            paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(paymentBackButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(paymenLogoutButton)
                .addContainerGap())
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(paymentSubmitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        paymentPanelLayout.setVerticalGroup(
            paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paymentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(paymenLogoutButton)
                    .addComponent(paymentBackButton))
                .addGap(114, 114, 114)
                .addComponent(paymentSubmitPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(228, Short.MAX_VALUE))
        );

        getContentPane().add(paymentPanel, "paymentCard");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectTripButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectTripButtonActionPerformed
               
        int index = departSearchResultsTable.getSelectedRow();
               
        if(index < 0)
        {
            JOptionPane.showMessageDialog(this, "must select trip");
            return;
        }
        controller.clearSelectedTrips();
        javax.swing.table.DefaultTableModel tripModel = (javax.swing.table.DefaultTableModel)departSearchResultsTable.getModel(); 
        
        Object trip = tripModel.getValueAt(index, 0);
        Object price = tripModel.getValueAt(index, 2);
        controller.addSelectedTrip((String)trip, (String)price);
       
        if(controller.getTripType() == TripType.ROUND_TRIP)
        {
            index = returnSearchResultsTable.getSelectedRow();
            if(index < 0)
            {
                JOptionPane.showMessageDialog(this, "must select trip");
                return;
            }
            tripModel = (javax.swing.table.DefaultTableModel)returnSearchResultsTable.getModel();
            trip = tripModel.getValueAt(index, 0);
            price = tripModel.getValueAt(index, 2);
            controller.addSelectedTrip((String)trip, (String)price);
        }
        
        totalPaymentDueField.setText(controller.getTotalPayment());
        
        CardLayout cl = (CardLayout) this.getContentPane().getLayout();
        cl.show(this.getContentPane(), "paymentCard");   
    }//GEN-LAST:event_selectTripButtonActionPerformed

    private void basicSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basicSearchButtonActionPerformed
        //System.out.println((String)leavingComboBox.getSelectedItem());
        //System.out.println((String)goingComboBox.getSelectedItem());       
        
        String leavingCode = (String)leavingComboBox.getSelectedItem();        
        String goingCode = (String)goingComboBox.getSelectedItem();         
        clearRoundSearchResults();
        
        if(leavingCode == "" || goingCode == "")
        {
            JOptionPane.showMessageDialog(this, "must specify airports");
            return;
        }
        
        
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdt = new SimpleDateFormat ("dd-MMM-yy");
        
        String leavingPlusMinus = (String)plusMinusLeavingCombo.getSelectedItem();        
        Date leavingDate = leavingDatePicker.getDate();   
        String leavingLowerBound = sdt.format(leavingDate);
        String leavingUpperBound = sdt.format(leavingDate); 
        
        System.out.println("leaving date: " + sdt.format(leavingDate));
            
        int offset = Integer.parseInt(leavingPlusMinus);           
        cal.setTime(leavingDate);
        if(offset > 0)
        {
            cal.add(Calendar.DATE, offset);
            leavingUpperBound = sdt.format(cal.getTime());
            System.out.println("upper: " + leavingUpperBound);

            cal.add(Calendar.DATE, (-2*offset));                
            leavingLowerBound = sdt.format(cal.getTime());
            System.out.println("lower: " + leavingLowerBound);
        }        
        
        String goingPlusMinus = "";
        Date goingDate = null;
        String goingLowerBound = "";
        String goingUpperBound = ""; 
        
        if(controller.getTripType() == TripType.ROUND_TRIP)
        {
            goingPlusMinus = (String)plusMinusGoingCombo.getSelectedItem();
            goingDate = goingDatePicker.getDate();
            System.out.println("going date: " + sdt.format(goingDate));
            goingLowerBound = sdt.format(goingDate);
            goingUpperBound = sdt.format(goingDate);
            
            offset = Integer.parseInt(goingPlusMinus);           
            cal.setTime(goingDate);
            if(offset > 0)
            {
                cal.add(Calendar.DATE, offset);
                goingUpperBound = sdt.format(cal.getTime());
                System.out.println("upper: " + goingUpperBound);
                
                cal.add(Calendar.DATE, (-2*offset));                
                goingLowerBound = sdt.format(cal.getTime());
                System.out.println("lower: " + goingLowerBound);
            }
            controller.getRoundSearchResults(leavingCode, goingCode, goingLowerBound, goingUpperBound, leavingLowerBound, leavingUpperBound);
            return;
        }        
        controller.getOneWaySearchResults(leavingCode, goingCode, leavingLowerBound, leavingUpperBound);  
        //System.out.println("filling departin sear")
    }//GEN-LAST:event_basicSearchButtonActionPerformed

    private void oneWayRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneWayRadioActionPerformed
        // TODO add your handling code here:
        controller.setTripType(TripType.ONE_WAY);
        goingDatePicker.setEditable(false);
        //plusMinusGoingCombo.setEditable(false);
    }//GEN-LAST:event_oneWayRadioActionPerformed

    private void createAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAccountButtonActionPerformed
        // TODO add your handling code here:
        String username = "";
        String password = "";

        username = newUserUsernameField.getText();
        password = new String(newUserPasswordField.getPassword());
        boolean addSuccess = false;
        try
        {
            addSuccess = controller.addUser(username, password);
        }
        catch (SQLException e)
        {
            System.out.println(e.getMessage());
        }
        
        if(addSuccess)
        {
            JOptionPane.showMessageDialog(this, "Welcome: " + username);
            CardLayout cl = (CardLayout) this.getContentPane().getLayout();
            userLoggedInAsLabel.setText(username);
            cl.show(this.getContentPane(), "userCard");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "username taken");
        }
        
        newUserUsernameField.setText("");
        newUserPasswordField.setText("");
    }//GEN-LAST:event_createAccountButtonActionPerformed

    private void oldUserSignInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldUserSignInActionPerformed
        // TODO add your handling code here:
        String username = "";
        String password = "";

        username = oldUserUsernameField.getText();
        password = new String(oldUserPasswordField.getPassword());
        
        System.out.println("username: " + username);
        System.out.println("passwrod: " + password);
        
        boolean validated = false;        
        validated = controller.validateUser(username, password);
        System.out.println("in validated: " + validated);
        if(validated) 
        {            
            //System.out.print("validated");
            //change cards
            //System.out.println()
            CardLayout cl = (CardLayout) this.getContentPane().getLayout();
            
            //determine user status
            if(controller.getUserAccess().equals(controller.getAdmin()))
            {
                 adminLoggedInAsLabel.setText(username);
                 controller.fillAdminTripTable();                 
                 
                 cl.show(this.getContentPane(), "adminCard");
            }
            else if(controller.getUserAccess().equals(controller.getRestricted()))
            {
                userLoggedInAsLabel.setText(username);
                cl.show(this.getContentPane(), "userCard");
                controller.setLoggedInUser(username, password);
            }
            else
            {
                System.out.print("invalid access level");
            }           
        }
        else
        {
           JOptionPane.showMessageDialog(this, "invalid username password combo");
        }        
        
        oldUserUsernameField.setText("");
        oldUserPasswordField.setText("");
    }//GEN-LAST:event_oldUserSignInActionPerformed

    private void adminDeleteTripButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminDeleteTripButtonActionPerformed
        
        //make sure really want to delete
         Object[] options = {"Yes", "No"};
        int n = JOptionPane.showOptionDialog(
            null,
            "Are you sure you would like to remove this trip?",
            "Remove Item Confirmation",
            JOptionPane.YES_NO_OPTION,
            JOptionPane.WARNING_MESSAGE,
            null,           //do not use a custom Icon
            options,        //the titles of buttons
            options[1]      //default to keeping the row
        );
        
        if(n!=JOptionPane.YES_OPTION)
        {
            return;
        }
        
        int index = this.adminTripsTable.getSelectedRow();
        //System.out.println("selected row: " + index);       
        
        javax.swing.table.DefaultTableModel tripModel = (javax.swing.table.DefaultTableModel)adminTripsTable.getModel();
        Object tripNum = tripModel.getValueAt(index, 0);
        //System.out.println("trip num: " + (String)tripNum);      
        
        //clear from database
        if(controller.removeTrip((String) tripNum))
        {
            // clear all the row
            tripModel.removeRow(index);
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Trip " + tripNum + " could not be removed");
        }
    }//GEN-LAST:event_adminDeleteTripButtonActionPerformed

    private void newUserUsernameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserUsernameFieldActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_newUserUsernameFieldActionPerformed

    private void adminLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminLogoutButtonActionPerformed
        //back to homescreen
        CardLayout cl = (CardLayout) this.getContentPane().getLayout();
        cl.show(this.getContentPane(), "loginCard");
        
        //clear tables        
    }//GEN-LAST:event_adminLogoutButtonActionPerformed

    private void oldUserPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oldUserPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_oldUserPasswordFieldActionPerformed

    private void adminViewTripButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminViewTripButtonActionPerformed
        //fill leg table w legs corresp to trip
        int index = this.adminTripsTable.getSelectedRow();
        //System.out.println("selected row: " + index);       
        if(index < 0)
        {
            return;
        }
        
        javax.swing.table.DefaultTableModel adminTableModel = (javax.swing.table.DefaultTableModel)adminTripsTable.getModel();
        Object tripNum = adminTableModel.getValueAt(index, 0);
        
        controller.fillAdminLegTable((String)tripNum);        
    }//GEN-LAST:event_adminViewTripButtonActionPerformed

    private void adminEditAssignmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminEditAssignmentButtonActionPerformed
        //fill leg table w legs corresp to trip
        int index = this.adminLegsTable.getSelectedRow();
        //System.out.println("selected row: " + index);       
        if(index < 0)
        {
            return;
        }
        
        javax.swing.table.DefaultTableModel legTableModel = (javax.swing.table.DefaultTableModel)adminLegsTable.getModel();
        Object tripNum = legTableModel.getValueAt(index, 0);
        Object legNum = legTableModel.getValueAt(index, 1);
        Object currentPlane = legTableModel.getValueAt(index, 4);
        
        List<String> planes = controller.getPlaneOptions();
        String options[] = planes.toArray(new String[planes.size()]);
        
        String s = (String)JOptionPane.showInputDialog(
                    this,
                    "Select different plane: ",
                    "Customized Dialog",
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    options,
                    "");        
        
        if(s.equals((String)currentPlane))
        {
            return;
        }
        else
        {
            //change plane & refresh table
            controller.changePlane((String)tripNum, (String)legNum, s);            
            controller.fillAdminLegTable((String)tripNum);
        }
        
    }//GEN-LAST:event_adminEditAssignmentButtonActionPerformed

    private void userViewFlightHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userViewFlightHistoryButtonActionPerformed
        controller.fillUserFlightHistoryPanel();        
    }//GEN-LAST:event_userViewFlightHistoryButtonActionPerformed

    private void userLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userLogoutButtonActionPerformed
        CardLayout cl = (CardLayout) this.getContentPane().getLayout();
        cl.show(this.getContentPane(), "loginCard");
    }//GEN-LAST:event_userLogoutButtonActionPerformed

    private void userSearchFlightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userSearchFlightButtonActionPerformed
        CardLayout cl = (CardLayout) this.getContentPane().getLayout();
        cl.show(this.getContentPane(), "flightSearchCard");    
        
        //*******populate combo boxes
        controller.populateSearchComboBoxes();
        setPlusMinusCombos();
        
        if(controller.getTripType() == TripType.ONE_WAY)
        {
            oneWayRadio.setSelected(true);
            goingDatePicker.setEditable(false);            
            //plusMinusGoingCombo.setEditable(false);
        }
        Calendar cal = Calendar.getInstance();
        leavingDatePicker.setDate(cal.getTime());
        goingDatePicker.setDate(cal.getTime());
        
    }//GEN-LAST:event_userSearchFlightButtonActionPerformed

    private void basicSearchBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basicSearchBackButtonActionPerformed
        CardLayout cl = (CardLayout) this.getContentPane().getLayout();
        cl.show(this.getContentPane(), "userCard"); 
    }//GEN-LAST:event_basicSearchBackButtonActionPerformed

    private void roundTripRadioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_roundTripRadioActionPerformed
        controller.setTripType(TripType.ROUND_TRIP);
        goingDatePicker.setEditable(true);                      
        //plusMinusGoingCombo.setEditable(true);
    }//GEN-LAST:event_roundTripRadioActionPerformed

    private void basicSearchLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_basicSearchLogoutButtonActionPerformed
       CardLayout cl = (CardLayout) this.getContentPane().getLayout();
        cl.show(this.getContentPane(), "loginCard");
    }//GEN-LAST:event_basicSearchLogoutButtonActionPerformed

    private void paymentBackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentBackButtonActionPerformed
        CardLayout cl = (CardLayout) this.getContentPane().getLayout();
        cl.show(this.getContentPane(), "flightSearchCard"); 
    }//GEN-LAST:event_paymentBackButtonActionPerformed

    private void paymenLogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymenLogoutButtonActionPerformed
        CardLayout cl = (CardLayout) this.getContentPane().getLayout();
        cl.show(this.getContentPane(), "loginCard");
    }//GEN-LAST:event_paymenLogoutButtonActionPerformed

    private void paymentEmailFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentEmailFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentEmailFieldActionPerformed

    private void paymentPhoneFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentPhoneFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_paymentPhoneFieldActionPerformed

    private void totalPaymentDueFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPaymentDueFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalPaymentDueFieldActionPerformed

    private void paymentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paymentSubmitButtonActionPerformed

        String email = paymentEmailField.getText();
        String street = paymentStreetField.getText();
        String accountNum = paymentAccountNumField.getText();
        String accountName = paymentAccountNameField.getText();
        String phone = paymentPhoneField.getText();
        String state = paymentStateField.getText();
        String zip = paymentZipField.getText();
        
        Random rand = new Random(System.currentTimeMillis());
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdt = new SimpleDateFormat ("dd-MMM-yy");
        
        Set<String> set = controller.getSelectedTrips().keySet();
        String resNum = String.valueOf(rand.nextInt(100));
        String date = sdt.format(cal.getTime());
        Payment payment = new 
                Payment(String.valueOf(rand.nextInt(100)), resNum , date, accountNum, accountName);
        
        String address = street.concat(state).concat(zip);
        Reservation reservation =
                new Reservation(resNum, email, address, phone, date);
        
        if(controller.addPaymentAndReservation(payment, reservation))
        {
            JOptionPane.showMessageDialog(this, "payment success");
        }
        else
        {
            JOptionPane.showMessageDialog(this, "payment could not be added.\n check all fields");
        }
    }//GEN-LAST:event_paymentSubmitButtonActionPerformed

    public void displayAdminTrips(List<Trip> trips)
    {
        javax.swing.table.DefaultTableModel adminTripsModel =
            (javax.swing.table.DefaultTableModel)this.adminTripsTable.getModel();
        // clear all the rows
        for(int i = adminTripsModel.getRowCount()-1; i >= 0; i--) {
            adminTripsModel.removeRow(i);
        }
        
        //add back rows: trip_number, airline, price, departure, destination, number_of_legs
        for(int i = 0; i < trips.size(); i++) {
            adminTripsModel.addRow(new Object[] {
                trips.get(i).getTrip_number(),
                trips.get(i).getAirline(),
                trips.get(i).getPrice(),
                trips.get(i).getDeparture(),
                trips.get(i).getDestination(),
                trips.get(i).getNumber_of_legs()
            });
        }
    }
    
    public void displayAdminLegs(List<Leg> legs)
    {
         javax.swing.table.DefaultTableModel adminLegsModel =
            (javax.swing.table.DefaultTableModel)this.adminLegsTable.getModel();
        // clear all the rows
        for(int i = adminLegsModel.getRowCount()-1; i >= 0; i--) {
            adminLegsModel.removeRow(i);
        }
        
        System.out.println("legssize: " + legs.size());
        
        //add back rows: trip_number, airline, price, departure, destination, number_of_legs
        for(int i = 0; i < legs.size(); i++) {
            adminLegsModel.addRow(new Object[] {
                legs.get(i).getTrip_number(),
                legs.get(i).getLeg_number(),
                legs.get(i).getSeats_available(),
                legs.get(i).getFlight_date(),
                legs.get(i).getAssignment(),        
            });
        }
    }
    
    public void displayFlightHistory(List<Trip> trips)
    {
         javax.swing.table.DefaultTableModel flightHistoryModel =
            (javax.swing.table.DefaultTableModel)this.userFlightHistoryTable.getModel();
        // clear all the rows
        for(int i = flightHistoryModel.getRowCount()-1; i >= 0; i--) {
            flightHistoryModel.removeRow(i);
        }
        
        //add back rows: trip_number, airline, price, departure, destination, number_of_legs
        for(int i = 0; i < trips.size(); i++) {
            flightHistoryModel.addRow(new Object[] {
                trips.get(i).getTrip_number(),
                trips.get(i).getAirline(),
                trips.get(i).getPrice(),
                trips.get(i).getDeparture(),
                trips.get(i).getDestination(),
                trips.get(i).getNumber_of_legs()
            });
        }
    }
    
    public void setLeavingGoingCombos(String[] leaving, String[] going)
    {
        leavingComboBox.removeAllItems();
        goingComboBox.removeAllItems();
        
        leavingComboBox.addItem("");
        goingComboBox.addItem("");
        
        for(String l: leaving)
        {
            leavingComboBox.addItem(l);
        }
        for(String g: going)
        {
            goingComboBox.addItem(g);
        }
    }
    
    public void setPlusMinusCombos()
    {
        String[] days = {"0", "1", "2"};
        plusMinusLeavingCombo.removeAllItems();
        plusMinusGoingCombo.removeAllItems();
        
        for(String d: days)
        {
            plusMinusLeavingCombo.addItem(d);
            plusMinusGoingCombo.addItem(d);
        }
    }
    
    public void displayDepartingResultsTable(List<Trip> trips)
    {
        javax.swing.table.DefaultTableModel searchResultsModel =
            (javax.swing.table.DefaultTableModel)this.departSearchResultsTable.getModel();
        
        // clear all the rows
        for(int i = searchResultsModel.getRowCount()-1; i >= 0; i--) {
            searchResultsModel.removeRow(i);
        }
        
        //add back rows: trip_number, airline, price, departure, destination, number_of_legs
        for(int i = 0; i < trips.size(); i++) {
            searchResultsModel.addRow(new Object[] {
                trips.get(i).getTrip_number(),
                trips.get(i).getAirline(),
                trips.get(i).getPrice(),
                trips.get(i).getDeparture(),
                trips.get(i).getDestination(),
                trips.get(i).getNumber_of_legs()
            });
        }
    }
    
     public void displayReturningResultsTable(List<Trip> trips)
    {
        javax.swing.table.DefaultTableModel searchResultsModel =
            (javax.swing.table.DefaultTableModel)this.returnSearchResultsTable.getModel();
        
        // clear all the rows
        for(int i = searchResultsModel.getRowCount()-1; i >= 0; i--) {
            searchResultsModel.removeRow(i);
        }
        
        //add back rows: trip_number, airline, price, departure, destination, number_of_legs
        for(int i = 0; i < trips.size(); i++) {
            searchResultsModel.addRow(new Object[] {
                trips.get(i).getTrip_number(),
                trips.get(i).getAirline(),
                trips.get(i).getPrice(),
                trips.get(i).getDeparture(),
                trips.get(i).getDestination(),
                trips.get(i).getNumber_of_legs()
            });
        }
    }
     
    public void clearRoundSearchResults()
    {
        javax.swing.table.DefaultTableModel searchResultsModel =
            (javax.swing.table.DefaultTableModel)this.returnSearchResultsTable.getModel();
        
        // clear all the rows
        for(int i = searchResultsModel.getRowCount()-1; i >= 0; i--) {
            searchResultsModel.removeRow(i);
        }
        
        searchResultsModel =
            (javax.swing.table.DefaultTableModel)this.departSearchResultsTable.getModel();
        
        // clear all the rows
        for(int i = searchResultsModel.getRowCount()-1; i >= 0; i--) {
            searchResultsModel.removeRow(i);
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Display.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Display().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel OldUserSignIn;
    private javax.swing.JButton adminDeleteTripButton;
    private javax.swing.JButton adminEditAssignmentButton;
    private javax.swing.JTable adminLegsTable;
    private javax.swing.JLabel adminLoggedInAsLabel;
    private javax.swing.JButton adminLogoutButton;
    private javax.swing.JPanel adminPanel;
    private javax.swing.JTable adminTripsTable;
    private javax.swing.JButton adminViewTripButton;
    private javax.swing.JButton basicSearchBackButton;
    private javax.swing.JButton basicSearchButton;
    private javax.swing.JButton basicSearchLogoutButton;
    private javax.swing.JPanel basicSearchPanel;
    private javax.swing.JButton createAccountButton;
    private javax.swing.JTable departSearchResultsTable;
    private javax.swing.JPanel flightSearchPanel;
    private javax.swing.JComboBox goingComboBox;
    private org.jdesktop.swingx.JXDatePicker goingDatePicker;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox leavingComboBox;
    private org.jdesktop.swingx.JXDatePicker leavingDatePicker;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPasswordField newUserPasswordField;
    private javax.swing.JTextField newUserUsernameField;
    private javax.swing.JPasswordField oldUserPasswordField;
    private javax.swing.JButton oldUserSignIn;
    private javax.swing.JTextField oldUserUsernameField;
    private javax.swing.JRadioButton oneWayRadio;
    private javax.swing.JButton paymenLogoutButton;
    private javax.swing.JTextField paymentAccountNameField;
    private javax.swing.JTextField paymentAccountNumField;
    private javax.swing.JButton paymentBackButton;
    private javax.swing.JTextField paymentEmailField;
    private javax.swing.JPanel paymentPanel;
    private javax.swing.JTextField paymentPhoneField;
    private javax.swing.JTextField paymentStateField;
    private javax.swing.JTextField paymentStreetField;
    private javax.swing.JButton paymentSubmitButton;
    private javax.swing.JPanel paymentSubmitPanel;
    private javax.swing.JTextField paymentZipField;
    private javax.swing.JComboBox plusMinusGoingCombo;
    private javax.swing.JComboBox plusMinusLeavingCombo;
    private javax.swing.JTable returnSearchResultsTable;
    private javax.swing.JRadioButton roundTripRadio;
    private javax.swing.JPanel searchResultsPanel;
    private javax.swing.JScrollPane searchResultsScroll;
    private javax.swing.JScrollPane searchResultsScroll1;
    private javax.swing.JButton selectTripButton;
    private javax.swing.JTextField totalPaymentDueField;
    private javax.swing.ButtonGroup tripType;
    private javax.swing.JScrollPane userFlightHistoryScroll;
    private javax.swing.JTable userFlightHistoryTable;
    private javax.swing.JLabel userLoggedInAsLabel;
    private javax.swing.JButton userLogoutButton;
    private javax.swing.JPanel userPanel;
    private javax.swing.JButton userSearchFlightButton;
    private javax.swing.JButton userViewFlightHistoryButton;
    // End of variables declaration//GEN-END:variables
}
